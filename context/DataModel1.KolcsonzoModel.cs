//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using EF Core template.
// Code is generated on: 2024. 05. 01. 16:04:28
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;
using System.Threading.Tasks;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Internal;
using Microsoft.EntityFrameworkCore.Metadata;
using CarRent.KolcsonzoModel;
using Microsoft.Extensions.Configuration;


namespace CarRent.Context
{

    public partial class KolcsonzoModel : DbContext
    {

        public KolcsonzoModel() :
            base()
        {
            OnCreated();
        }

        public KolcsonzoModel(DbContextOptions<KolcsonzoModel> options) :
            base(options)
        {
            OnCreated();
        }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured ||
                (!optionsBuilder.Options.Extensions.OfType<RelationalOptionsExtension>().Any(ext => !string.IsNullOrEmpty(ext.ConnectionString) || ext.Connection != null) &&
                 !optionsBuilder.Options.Extensions.Any(ext => !(ext is RelationalOptionsExtension) && !(ext is CoreOptionsExtension))))
            {
                // optionsBuilder.UseSqlServer(@"Data Source=DESKTOP-8KNRJ2L\SQLEXPRESS01;Initial Catalog=Kolcsonzo;Integrated Security=False;Persist Security Info=True;User ID=jozsi;Password=jozsi;TrustServerCertificate=True");
                optionsBuilder.UseSqlServer("Data Source=DESKTOP-42AU8MT\\SQLEXPRESS;Initial Catalog=Kolcsonzo; Integrated Security = True; TrustServerCertificate = True");

            }
            CustomizeConfiguration(ref optionsBuilder);
            base.OnConfiguring(optionsBuilder);
        }
      
        partial void CustomizeConfiguration(ref DbContextOptionsBuilder optionsBuilder);

        public virtual DbSet<Markak> Markaks
        {
            get;
            set;
        }

        public virtual DbSet<Kolcsonzesek> Kolcsonzeseks
        {
            get;
            set;
        }

        public virtual DbSet<Kedvezmenyek> Kedvezmenyeks
        {
            get;
            set;
        }

        public virtual DbSet<Felhasznalok> Felhasznaloks
        {
            get;
            set;
        }

        public virtual DbSet<Extrak> Extraks
        {
            get;
            set;
        }

        public virtual DbSet<Autok> Autoks
        {
            get;
            set;
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            this.MarkakMapping(modelBuilder);
            this.CustomizeMarkakMapping(modelBuilder);

            this.KolcsonzesekMapping(modelBuilder);
            this.CustomizeKolcsonzesekMapping(modelBuilder);

            this.KedvezmenyekMapping(modelBuilder);
            this.CustomizeKedvezmenyekMapping(modelBuilder);

            this.FelhasznalokMapping(modelBuilder);
            this.CustomizeFelhasznalokMapping(modelBuilder);

            this.ExtrakMapping(modelBuilder);
            this.CustomizeExtrakMapping(modelBuilder);

            this.AutokMapping(modelBuilder);
            this.CustomizeAutokMapping(modelBuilder);

            RelationshipsMapping(modelBuilder);
            CustomizeMapping(ref modelBuilder);

            modelBuilder.Entity<Autok>()
            .HasMany(a => a.Extraks)
            .WithMany(e => e.Autoks)
            .UsingEntity<Dictionary<string, object>>(
            "Extrak_Kapcsolo",
            a => a.HasOne<Extrak>().WithMany().HasForeignKey("Extra_ID").OnDelete(DeleteBehavior.Cascade),
            e => e.HasOne<Autok>().WithMany().HasForeignKey("Auto_ID").OnDelete(DeleteBehavior.Cascade)
    );

        }

        #region Markak Mapping

        private void MarkakMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Markak>().ToTable(@"Markak", @"dbo");
            modelBuilder.Entity<Markak>().Property(x => x.MarkaID).HasColumnName(@"Marka_ID").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Markak>().Property(x => x.MarkaNev).HasColumnName(@"Marka_nev").HasColumnType(@"char(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Markak>().HasKey(@"MarkaID");
        }

        partial void CustomizeMarkakMapping(ModelBuilder modelBuilder);

        #endregion

        #region Kolcsonzesek Mapping

        private void KolcsonzesekMapping(ModelBuilder modelBuilder)
        {

            modelBuilder.Entity<Kolcsonzesek>().ToTable(@"Kolcsonzesek", @"dbo");
            modelBuilder.Entity<Kolcsonzesek>().Property(x => x.KolcsonzesID).HasColumnName(@"Kolcsonzes_ID").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Kolcsonzesek>().Property(x => x.FelhasznaloID).HasColumnName(@"Felhasznalo_ID").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Kolcsonzesek>().Property(x => x.AutoID).HasColumnName(@"Auto_ID").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Kolcsonzesek>().Property(x => x.Mettol).HasColumnName(@"Mettol").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Kolcsonzesek>().Property(x => x.Meddig).HasColumnName(@"Meddig").HasColumnType(@"date").IsRequired().ValueGeneratedNever();
            modelBuilder.Entity<Kolcsonzesek>().HasKey(@"KolcsonzesID");
        }

        partial void CustomizeKolcsonzesekMapping(ModelBuilder modelBuilder);

        #endregion

        #region Kedvezmenyek Mapping

        private void KedvezmenyekMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Kedvezmenyek>().ToTable(@"Kedvezmenyek", @"dbo");
            modelBuilder.Entity<Kedvezmenyek>().Property(x => x.KedvezmenyID).HasColumnName(@"Kedvezmeny_ID").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Kedvezmenyek>().Property(x => x.KedvezmenyErteke).HasColumnName(@"Kedvezmeny_erteke").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Kedvezmenyek>().HasKey(@"KedvezmenyID");
        }

        partial void CustomizeKedvezmenyekMapping(ModelBuilder modelBuilder);

        #endregion

        #region Felhasznalok Mapping

        private void FelhasznalokMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Felhasznalok>().ToTable(@"Felhasznalok", @"dbo");
            modelBuilder.Entity<Felhasznalok>().Property(x => x.FelhasznaloID).HasColumnName(@"Felhasznalo_ID").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Felhasznalok>().Property(x => x.Felhasznalonev).HasColumnName(@"Felhasznalonev").HasColumnType(@"char(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Felhasznalok>().Property(x => x.Email).HasColumnName(@"Email").HasColumnType(@"char(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Felhasznalok>().Property(x => x.Jelszo).HasColumnName(@"Jelszo").HasColumnType(@"char(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Felhasznalok>().HasKey(@"FelhasznaloID");
        }

        partial void CustomizeFelhasznalokMapping(ModelBuilder modelBuilder);

        #endregion

        #region Extrak Mapping

        private void ExtrakMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Extrak>().ToTable(@"Extrak", @"dbo");
            modelBuilder.Entity<Extrak>().Property(x => x.ExtraID).HasColumnName(@"Extra_ID").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Extrak>().Property(x => x.ExtraNev).HasColumnName(@"Extra_nev").HasColumnType(@"char(100)").IsRequired().ValueGeneratedNever().HasMaxLength(100);
            modelBuilder.Entity<Extrak>().HasKey(@"ExtraID");
        }

        partial void CustomizeExtrakMapping(ModelBuilder modelBuilder);

        #endregion

        #region Autok Mapping

        private void AutokMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Autok>().ToTable(@"Autok", @"dbo");
            modelBuilder.Entity<Autok>().Property(x => x.AutoID).HasColumnName(@"Auto_ID").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Autok>().Property(x => x.MarkaID).HasColumnName(@"Marka_ID").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Autok>().Property(x => x.Modell).HasColumnName(@"Modell").HasColumnType(@"char(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Autok>().Property(x => x.Evjarat).HasColumnName(@"Evjarat").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Autok>().Property(x => x.Valto).HasColumnName(@"Valto").HasColumnType(@"char(10)").IsRequired().ValueGeneratedNever().HasMaxLength(10);
            modelBuilder.Entity<Autok>().Property(x => x.Uzemanyag).HasColumnName(@"Uzemanyag").HasColumnType(@"char(20)").IsRequired().ValueGeneratedNever().HasMaxLength(20);
            modelBuilder.Entity<Autok>().Property(x => x.Ulesekszama).HasColumnName(@"Ulesekszama").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Autok>().Property(x => x.Kivitel).HasColumnName(@"Kivitel").HasColumnType(@"char(50)").IsRequired().ValueGeneratedNever().HasMaxLength(50);
            modelBuilder.Entity<Autok>().Property(x => x.Ar).HasColumnName(@"Ar").HasColumnType(@"int").IsRequired().ValueGeneratedNever().HasPrecision(10, 0);
            modelBuilder.Entity<Autok>().Property(x => x.KedvezmenyID).HasColumnName(@"Kedvezmeny_ID").HasColumnType(@"int").IsRequired().ValueGeneratedOnAdd().HasPrecision(10, 0);
            modelBuilder.Entity<Autok>().HasKey(@"AutoID");
        }

        partial void CustomizeAutokMapping(ModelBuilder modelBuilder);

        #endregion
        
        private void RelationshipsMapping(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Markak>().HasMany(x => x.Autoks).WithOne(op => op.Markak).HasForeignKey(@"MarkaID").IsRequired(true);

            modelBuilder.Entity<Kedvezmenyek>().HasMany(x => x.Autoks).WithOne(op => op.Kedvezmenyek).HasForeignKey(@"KedvezmenyID").IsRequired(true);
            modelBuilder.Entity<Autok>().HasMany(x => x.Kolcsonzeseks).WithOne(op => op.Autok).HasForeignKey(@"AutoID").IsRequired(true);
            modelBuilder.Entity<Autok>().HasMany(x => x.Extraks).WithMany(op => op.Autoks)
                .UsingEntity<Dictionary<string, object>>(
                    @"Extrak_Kapcsolo",
                    x => x.HasOne<Extrak>().WithMany().HasPrincipalKey(@"ExtraID").HasForeignKey(@"Extra_ID"),
                    x => x.HasOne<Autok>().WithMany().HasPrincipalKey(@"AutoID").HasForeignKey(@"Auto_ID")
                )
                .ToTable(@"Extrak_Kapcsolo", @"dbo");

            modelBuilder.Entity<Felhasznalok>().HasMany(x => x.Kolcsonzeseks).WithOne(op => op.Felhasznalok).HasForeignKey(@"FelhasznaloID").IsRequired(true);

            modelBuilder.Entity<Kolcsonzesek>().HasOne(x => x.Felhasznalok).WithMany(op => op.Kolcsonzeseks).HasForeignKey(@"FelhasznaloID").IsRequired(true);
            modelBuilder.Entity<Kolcsonzesek>().HasOne(x => x.Autok).WithMany(op => op.Kolcsonzeseks).HasForeignKey(@"AutoID").IsRequired(true);
        }

        partial void CustomizeMapping(ref ModelBuilder modelBuilder);

        public bool HasChanges()
        {
            return ChangeTracker.Entries().Any(e => e.State == Microsoft.EntityFrameworkCore.EntityState.Added || e.State == Microsoft.EntityFrameworkCore.EntityState.Modified || e.State == Microsoft.EntityFrameworkCore.EntityState.Deleted);
        }

        partial void OnCreated();

        
    }
}
